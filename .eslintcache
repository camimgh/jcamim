[{"/home/cami/Documents/jcamim/src/index.js":"1","/home/cami/Documents/jcamim/src/App.js":"2","/home/cami/Documents/jcamim/src/reportWebVitals.js":"3","/home/cami/Documents/jcamim/src/modules/NavBar.js":"4","/home/cami/Documents/jcamim/src/pages/Projects.js":"5","/home/cami/Documents/jcamim/src/pages/About.js":"6","/home/cami/Documents/jcamim/src/pages/Experience.js":"7","/home/cami/Documents/jcamim/src/pages/Timeline.js":"8","/home/cami/Documents/jcamim/src/pages/Writing.js":"9","/home/cami/Documents/jcamim/src/pages/pages_projects/Dive.js":"10","/home/cami/Documents/jcamim/src/pages/blogs/Complicated.js":"11","/home/cami/Documents/jcamim/src/pages/Poop.js":"12"},{"size":547,"mtime":1612410582293,"results":"13","hashOfConfig":"14"},{"size":1371,"mtime":1642572277416,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612410582297,"results":"16","hashOfConfig":"14"},{"size":2243,"mtime":1642572238708,"results":"17","hashOfConfig":"14"},{"size":1820,"mtime":1614786729574,"results":"18","hashOfConfig":"14"},{"size":3539,"mtime":1640287691182,"results":"19","hashOfConfig":"14"},{"size":7333,"mtime":1630291929071,"results":"20","hashOfConfig":"14"},{"size":17351,"mtime":1640287960644,"results":"21","hashOfConfig":"14"},{"size":1332,"mtime":1620344452656,"results":"22","hashOfConfig":"14"},{"size":1746,"mtime":1614057211836,"results":"23","hashOfConfig":"14"},{"size":1068,"mtime":1620343685129,"results":"24","hashOfConfig":"14"},{"size":945,"mtime":1642575603870,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1oxidu8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cami/Documents/jcamim/src/index.js",[],["53","54"],"/home/cami/Documents/jcamim/src/App.js",["55","56"],"/home/cami/Documents/jcamim/src/reportWebVitals.js",[],"/home/cami/Documents/jcamim/src/modules/NavBar.js",["57","58","59","60","61"],"/home/cami/Documents/jcamim/src/pages/Projects.js",[],"/home/cami/Documents/jcamim/src/pages/About.js",["62"],"/home/cami/Documents/jcamim/src/pages/Experience.js",[],"/home/cami/Documents/jcamim/src/pages/Timeline.js",["63","64"],"/home/cami/Documents/jcamim/src/pages/Writing.js",[],"/home/cami/Documents/jcamim/src/pages/pages_projects/Dive.js",["65","66","67"],"import React, { Component } from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport {render} from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport Divemd from \"./Dive.md\";\nimport './Dive.css'\nimport gfm from 'remark-gfm';\nimport Card from 'react-bootstrap/Card'\n/*\nexport default function Dive() {\n    return (\n        <div id=\"dive\">\n            <ReactMarkdown>\n                # Hello, *world*!\n            </ReactMarkdown>\n        </div>\n    );\n}\n*/\n\nclass Dive extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { markdown: '' };\n    }\n    componentWillMount() {\n        fetch(Divemd).then(res => res.text()).then(text => this.setState({ markdown: text})); \n    }\n\n    render() {\n        const { markdown } = this.state;\n        return (\n            <div id=\"dive\">\n                <Card body>\n                <h1>Dive</h1>\n                <p>\n                        Dive is a mobile app built with <b>Typescript</b> and <b>React</b> that connects people to others inside or outside of their culture to encourage diversity, personal connection, and friendship.\n                        My team of 5 worked on the front-end of Dive for Microsoft's <a href=\"https://newtechnologists.com\">New Technologist program</a>.\n                </p>\n                <p align=\"center\"><iframe width=\"300\" height=\"200\" \n                    src=\"https://www.youtube.com/embed/gfzJSjN6rV8\" frameborder=\"0\" \n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n                    <ReactMarkdown plugins={[gfm]} source={markdown} />\n                </Card>\n            </div>\n        )\n    }\n}\nexport default Dive;\n","/home/cami/Documents/jcamim/src/pages/blogs/Complicated.js",["68","69"],"import React, { Component } from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport {render} from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport Complicatedmd from \"./Complicated.md\";\nimport gfm from 'remark-gfm';\nimport Card from 'react-bootstrap/Card'\n/*\nexport default function Dive() {\n    return (\n        <div id=\"dive\">\n            <ReactMarkdown>\n                # Hello, *world*!\n            </ReactMarkdown>\n        </div>\n    );\n}\n*/\n\nclass Complicated extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { markdown: '' };\n    }\n    componentWillMount() {\n        fetch(Complicatedmd).then(res => res.text()).then(text => this.setState({ markdown: text})); \n    }\n\n    render() {\n        const { markdown } = this.state;\n        return (\n            <div id=\"dive\">\n                <p><a href=\"/writing\">back</a></p>\n                <Card body>\n                    <ReactMarkdown plugins={[gfm]} source={markdown} />\n                </Card>\n            </div>\n        )\n    }\n}\nexport default Complicated;","/home/cami/Documents/jcamim/src/pages/Poop.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":8,"column":22,"nodeType":"77","messageId":"78","endLine":8,"endColumn":28},{"ruleId":"75","severity":1,"message":"81","line":9,"column":5,"nodeType":"77","messageId":"78","endLine":9,"endColumn":11},{"ruleId":"75","severity":1,"message":"82","line":10,"column":5,"nodeType":"77","messageId":"78","endLine":10,"endColumn":16},{"ruleId":"75","severity":1,"message":"83","line":11,"column":5,"nodeType":"77","messageId":"78","endLine":11,"endColumn":9},{"ruleId":"84","severity":1,"message":"85","line":48,"column":21,"nodeType":"86","endLine":48,"endColumn":61},{"ruleId":"75","severity":1,"message":"87","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"88","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":40,"column":35,"nodeType":"86","endLine":42,"endColumn":134},{"ruleId":"75","severity":1,"message":"76","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"91","line":3,"column":41,"nodeType":"77","messageId":"78","endLine":3,"endColumn":48},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useLocation' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardDeck' is defined but never used.","'Button' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'InfoBox' is defined but never used.","no-global-assign","no-unsafe-negation"]